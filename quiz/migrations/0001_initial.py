# Generated by Django 4.2.11 on 2025-05-25 05:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('is_correct', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MyQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=150, unique=True)),
                ('quiz_pass', models.FloatField(default=60, help_text="testdan o'tish foizi")),
                ('duration_time', models.PositiveIntegerField(default=1, help_text='minutes', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duration time')),
                ('attempts_allowed', models.IntegerField(help_text='Testni necha marta yechishga ruxsat beriladi', verbose_name='attemps allowed')),
                ('number_of_questions', models.IntegerField(default=1, verbose_name='number of questions')),
                ('is_available', models.BooleanField(default=False)),
                ('is_open', models.BooleanField(default=False)),
                ('is_started', models.BooleanField(default=False, verbose_name='is started')),
                ('is_show_selected_ans', models.BooleanField(default=False, verbose_name='show selected answers')),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.lesson', verbose_name='lesson')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('is_multiple_choice', models.BooleanField(default=False, verbose_name='is multiple choice')),
                ('is_available', models.BooleanField(default=True, verbose_name='is available')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.myquiz')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField(verbose_name='score')),
                ('time_taken', models.DurationField(verbose_name='time taken')),
                ('date_taken', models.DateTimeField(auto_now_add=True, verbose_name='date taken')),
                ('is_started', models.BooleanField(default=False, verbose_name='is started')),
                ('is_completed', models.BooleanField(default=False, verbose_name='is completed')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_attempts', to='quiz.myquiz', verbose_name='test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='quiz.userattempt', verbose_name='attempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.question', verbose_name='question')),
                ('selected_answers', models.ManyToManyField(to='quiz.answer', verbose_name='selected answers')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('total_questions', models.PositiveIntegerField()),
                ('correct_questions', models.PositiveIntegerField()),
                ('is_pass', models.BooleanField(default=False)),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='quiz.myquiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.question', verbose_name='question'),
        ),
    ]
